/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 290.0, "minX": 0.0, "maxY": 77543.0, "series": [{"data": [[0.0, 290.0], [0.1, 290.0], [0.2, 290.0], [0.3, 290.0], [0.4, 290.0], [0.5, 290.0], [0.6, 290.0], [0.7, 290.0], [0.8, 291.0], [0.9, 291.0], [1.0, 291.0], [1.1, 291.0], [1.2, 291.0], [1.3, 291.0], [1.4, 291.0], [1.5, 291.0], [1.6, 291.0], [1.7, 291.0], [1.8, 291.0], [1.9, 291.0], [2.0, 292.0], [2.1, 292.0], [2.2, 292.0], [2.3, 292.0], [2.4, 292.0], [2.5, 292.0], [2.6, 292.0], [2.7, 292.0], [2.8, 293.0], [2.9, 293.0], [3.0, 293.0], [3.1, 293.0], [3.2, 293.0], [3.3, 293.0], [3.4, 293.0], [3.5, 293.0], [3.6, 293.0], [3.7, 293.0], [3.8, 293.0], [3.9, 293.0], [4.0, 293.0], [4.1, 293.0], [4.2, 293.0], [4.3, 293.0], [4.4, 293.0], [4.5, 293.0], [4.6, 293.0], [4.7, 293.0], [4.8, 294.0], [4.9, 294.0], [5.0, 294.0], [5.1, 294.0], [5.2, 294.0], [5.3, 294.0], [5.4, 294.0], [5.5, 294.0], [5.6, 294.0], [5.7, 294.0], [5.8, 294.0], [5.9, 294.0], [6.0, 294.0], [6.1, 294.0], [6.2, 294.0], [6.3, 294.0], [6.4, 294.0], [6.5, 294.0], [6.6, 294.0], [6.7, 294.0], [6.8, 294.0], [6.9, 294.0], [7.0, 294.0], [7.1, 294.0], [7.2, 295.0], [7.3, 295.0], [7.4, 295.0], [7.5, 295.0], [7.6, 295.0], [7.7, 295.0], [7.8, 295.0], [7.9, 295.0], [8.0, 296.0], [8.1, 296.0], [8.2, 296.0], [8.3, 296.0], [8.4, 296.0], [8.5, 296.0], [8.6, 296.0], [8.7, 296.0], [8.8, 297.0], [8.9, 297.0], [9.0, 297.0], [9.1, 297.0], [9.2, 297.0], [9.3, 297.0], [9.4, 297.0], [9.5, 297.0], [9.6, 297.0], [9.7, 297.0], [9.8, 297.0], [9.9, 297.0], [10.0, 297.0], [10.1, 297.0], [10.2, 297.0], [10.3, 297.0], [10.4, 298.0], [10.5, 298.0], [10.6, 298.0], [10.7, 298.0], [10.8, 298.0], [10.9, 298.0], [11.0, 298.0], [11.1, 298.0], [11.2, 299.0], [11.3, 299.0], [11.4, 299.0], [11.5, 299.0], [11.6, 299.0], [11.7, 299.0], [11.8, 299.0], [11.9, 299.0], [12.0, 300.0], [12.1, 300.0], [12.2, 300.0], [12.3, 300.0], [12.4, 300.0], [12.5, 300.0], [12.6, 300.0], [12.7, 300.0], [12.8, 301.0], [12.9, 301.0], [13.0, 301.0], [13.1, 301.0], [13.2, 301.0], [13.3, 301.0], [13.4, 301.0], [13.5, 301.0], [13.6, 301.0], [13.7, 301.0], [13.8, 301.0], [13.9, 301.0], [14.0, 303.0], [14.1, 303.0], [14.2, 303.0], [14.3, 303.0], [14.4, 307.0], [14.5, 307.0], [14.6, 307.0], [14.7, 307.0], [14.8, 308.0], [14.9, 308.0], [15.0, 308.0], [15.1, 308.0], [15.2, 310.0], [15.3, 310.0], [15.4, 310.0], [15.5, 310.0], [15.6, 312.0], [15.7, 312.0], [15.8, 312.0], [15.9, 312.0], [16.0, 371.0], [16.1, 371.0], [16.2, 371.0], [16.3, 371.0], [16.4, 375.0], [16.5, 375.0], [16.6, 375.0], [16.7, 375.0], [16.8, 937.0], [16.9, 937.0], [17.0, 937.0], [17.1, 937.0], [17.2, 1062.0], [17.3, 1062.0], [17.4, 1062.0], [17.5, 1062.0], [17.6, 1073.0], [17.7, 1073.0], [17.8, 1073.0], [17.9, 1073.0], [18.0, 1299.0], [18.1, 1299.0], [18.2, 1299.0], [18.3, 1299.0], [18.4, 1662.0], [18.5, 1662.0], [18.6, 1662.0], [18.7, 1662.0], [18.8, 2292.0], [18.9, 2292.0], [19.0, 2292.0], [19.1, 2292.0], [19.2, 2294.0], [19.3, 2294.0], [19.4, 2294.0], [19.5, 2294.0], [19.6, 2878.0], [19.7, 2878.0], [19.8, 2878.0], [19.9, 2878.0], [20.0, 3073.0], [20.1, 3073.0], [20.2, 3073.0], [20.3, 3073.0], [20.4, 3196.0], [20.5, 3196.0], [20.6, 3196.0], [20.7, 3196.0], [20.8, 3549.0], [20.9, 3549.0], [21.0, 3549.0], [21.1, 3549.0], [21.2, 3773.0], [21.3, 3773.0], [21.4, 3773.0], [21.5, 3773.0], [21.6, 4301.0], [21.7, 4301.0], [21.8, 4301.0], [21.9, 4301.0], [22.0, 4303.0], [22.1, 4303.0], [22.2, 4303.0], [22.3, 4303.0], [22.4, 6141.0], [22.5, 6141.0], [22.6, 6141.0], [22.7, 6141.0], [22.8, 6608.0], [22.9, 6608.0], [23.0, 6608.0], [23.1, 6608.0], [23.2, 6915.0], [23.3, 6915.0], [23.4, 6915.0], [23.5, 6915.0], [23.6, 7025.0], [23.7, 7025.0], [23.8, 7025.0], [23.9, 7025.0], [24.0, 7247.0], [24.1, 7247.0], [24.2, 7247.0], [24.3, 7247.0], [24.4, 7371.0], [24.5, 7371.0], [24.6, 7371.0], [24.7, 7371.0], [24.8, 7405.0], [24.9, 7405.0], [25.0, 7405.0], [25.1, 8024.0], [25.2, 8024.0], [25.3, 8024.0], [25.4, 8024.0], [25.5, 8158.0], [25.6, 8158.0], [25.7, 8158.0], [25.8, 8158.0], [25.9, 8290.0], [26.0, 8290.0], [26.1, 8290.0], [26.2, 8290.0], [26.3, 8825.0], [26.4, 8825.0], [26.5, 8825.0], [26.6, 8825.0], [26.7, 9821.0], [26.8, 9821.0], [26.9, 9821.0], [27.0, 9821.0], [27.1, 10034.0], [27.2, 10034.0], [27.3, 10034.0], [27.4, 10034.0], [27.5, 10761.0], [27.6, 10761.0], [27.7, 10761.0], [27.8, 10761.0], [27.9, 11781.0], [28.0, 11781.0], [28.1, 11781.0], [28.2, 11781.0], [28.3, 11848.0], [28.4, 11848.0], [28.5, 11848.0], [28.6, 11848.0], [28.7, 11971.0], [28.8, 11971.0], [28.9, 11971.0], [29.0, 11971.0], [29.1, 12603.0], [29.2, 12603.0], [29.3, 12603.0], [29.4, 12603.0], [29.5, 12982.0], [29.6, 12982.0], [29.7, 12982.0], [29.8, 12982.0], [29.9, 13272.0], [30.0, 13272.0], [30.1, 13272.0], [30.2, 13272.0], [30.3, 13481.0], [30.4, 13481.0], [30.5, 13481.0], [30.6, 13481.0], [30.7, 13496.0], [30.8, 13496.0], [30.9, 13496.0], [31.0, 13496.0], [31.1, 13885.0], [31.2, 13885.0], [31.3, 13885.0], [31.4, 13885.0], [31.5, 14063.0], [31.6, 14063.0], [31.7, 14063.0], [31.8, 14063.0], [31.9, 14431.0], [32.0, 14431.0], [32.1, 14431.0], [32.2, 14431.0], [32.3, 15531.0], [32.4, 15531.0], [32.5, 15531.0], [32.6, 15531.0], [32.7, 15600.0], [32.8, 15600.0], [32.9, 15600.0], [33.0, 15600.0], [33.1, 15632.0], [33.2, 15632.0], [33.3, 15632.0], [33.4, 15632.0], [33.5, 15671.0], [33.6, 15671.0], [33.7, 15671.0], [33.8, 15671.0], [33.9, 15677.0], [34.0, 15677.0], [34.1, 15677.0], [34.2, 15677.0], [34.3, 15686.0], [34.4, 15686.0], [34.5, 15686.0], [34.6, 15686.0], [34.7, 15735.0], [34.8, 15735.0], [34.9, 15735.0], [35.0, 15735.0], [35.1, 15772.0], [35.2, 15772.0], [35.3, 15772.0], [35.4, 15772.0], [35.5, 15799.0], [35.6, 15799.0], [35.7, 15799.0], [35.8, 15799.0], [35.9, 15807.0], [36.0, 15807.0], [36.1, 15807.0], [36.2, 15807.0], [36.3, 15848.0], [36.4, 15848.0], [36.5, 15848.0], [36.6, 15848.0], [36.7, 15904.0], [36.8, 15904.0], [36.9, 15904.0], [37.0, 15904.0], [37.1, 15976.0], [37.2, 15976.0], [37.3, 15976.0], [37.4, 15976.0], [37.5, 15982.0], [37.6, 15982.0], [37.7, 15982.0], [37.8, 15982.0], [37.9, 16022.0], [38.0, 16022.0], [38.1, 16022.0], [38.2, 16022.0], [38.3, 16166.0], [38.4, 16166.0], [38.5, 16166.0], [38.6, 16166.0], [38.7, 16222.0], [38.8, 16222.0], [38.9, 16222.0], [39.0, 16222.0], [39.1, 16234.0], [39.2, 16234.0], [39.3, 16234.0], [39.4, 16234.0], [39.5, 16270.0], [39.6, 16270.0], [39.7, 16270.0], [39.8, 16270.0], [39.9, 16296.0], [40.0, 16296.0], [40.1, 16296.0], [40.2, 16296.0], [40.3, 16301.0], [40.4, 16301.0], [40.5, 16301.0], [40.6, 16301.0], [40.7, 16315.0], [40.8, 16315.0], [40.9, 16315.0], [41.0, 16315.0], [41.1, 16354.0], [41.2, 16354.0], [41.3, 16354.0], [41.4, 16354.0], [41.5, 16355.0], [41.6, 16355.0], [41.7, 16355.0], [41.8, 16355.0], [41.9, 16358.0], [42.0, 16358.0], [42.1, 16358.0], [42.2, 16358.0], [42.3, 16364.0], [42.4, 16364.0], [42.5, 16364.0], [42.6, 16364.0], [42.7, 16414.0], [42.8, 16414.0], [42.9, 16414.0], [43.0, 16414.0], [43.1, 16417.0], [43.2, 16417.0], [43.3, 16417.0], [43.4, 16417.0], [43.5, 16499.0], [43.6, 16499.0], [43.7, 16499.0], [43.8, 16499.0], [43.9, 16513.0], [44.0, 16513.0], [44.1, 16513.0], [44.2, 16513.0], [44.3, 16611.0], [44.4, 16611.0], [44.5, 16611.0], [44.6, 16611.0], [44.7, 16638.0], [44.8, 16638.0], [44.9, 16638.0], [45.0, 16638.0], [45.1, 16648.0], [45.2, 16648.0], [45.3, 16648.0], [45.4, 16648.0], [45.5, 16657.0], [45.6, 16657.0], [45.7, 16657.0], [45.8, 16657.0], [45.9, 16659.0], [46.0, 16659.0], [46.1, 16659.0], [46.2, 16659.0], [46.3, 16660.0], [46.4, 16660.0], [46.5, 16660.0], [46.6, 16660.0], [46.7, 16686.0], [46.8, 16686.0], [46.9, 16686.0], [47.0, 16686.0], [47.1, 16692.0], [47.2, 16692.0], [47.3, 16692.0], [47.4, 16692.0], [47.5, 16720.0], [47.6, 16720.0], [47.7, 16720.0], [47.8, 16720.0], [47.9, 16722.0], [48.0, 16722.0], [48.1, 16722.0], [48.2, 16722.0], [48.3, 16751.0], [48.4, 16751.0], [48.5, 16751.0], [48.6, 16751.0], [48.7, 16760.0], [48.8, 16760.0], [48.9, 16760.0], [49.0, 16760.0], [49.1, 16767.0], [49.2, 16767.0], [49.3, 16767.0], [49.4, 16767.0], [49.5, 16770.0], [49.6, 16770.0], [49.7, 16770.0], [49.8, 16770.0], [49.9, 16788.0], [50.0, 16788.0], [50.1, 16788.0], [50.2, 16803.0], [50.3, 16803.0], [50.4, 16803.0], [50.5, 16803.0], [50.6, 16858.0], [50.7, 16858.0], [50.8, 16858.0], [50.9, 16858.0], [51.0, 16916.0], [51.1, 16916.0], [51.2, 16916.0], [51.3, 16916.0], [51.4, 16976.0], [51.5, 16976.0], [51.6, 16976.0], [51.7, 16976.0], [51.8, 17017.0], [51.9, 17017.0], [52.0, 17017.0], [52.1, 17017.0], [52.2, 17073.0], [52.3, 17073.0], [52.4, 17073.0], [52.5, 17073.0], [52.6, 17161.0], [52.7, 17161.0], [52.8, 17161.0], [52.9, 17161.0], [53.0, 17186.0], [53.1, 17186.0], [53.2, 17186.0], [53.3, 17186.0], [53.4, 17550.0], [53.5, 17550.0], [53.6, 17550.0], [53.7, 17550.0], [53.8, 17759.0], [53.9, 17759.0], [54.0, 17759.0], [54.1, 17759.0], [54.2, 17804.0], [54.3, 17804.0], [54.4, 17804.0], [54.5, 17804.0], [54.6, 17831.0], [54.7, 17831.0], [54.8, 17831.0], [54.9, 17831.0], [55.0, 17833.0], [55.1, 17833.0], [55.2, 17833.0], [55.3, 17833.0], [55.4, 17844.0], [55.5, 17844.0], [55.6, 17844.0], [55.7, 17844.0], [55.8, 17857.0], [55.9, 17857.0], [56.0, 17857.0], [56.1, 17857.0], [56.2, 17875.0], [56.3, 17875.0], [56.4, 17875.0], [56.5, 17875.0], [56.6, 17880.0], [56.7, 17880.0], [56.8, 17880.0], [56.9, 17880.0], [57.0, 17880.0], [57.1, 17880.0], [57.2, 17880.0], [57.3, 17880.0], [57.4, 17884.0], [57.5, 17884.0], [57.6, 17884.0], [57.7, 17884.0], [57.8, 17887.0], [57.9, 17887.0], [58.0, 17887.0], [58.1, 17887.0], [58.2, 17889.0], [58.3, 17889.0], [58.4, 17889.0], [58.5, 17889.0], [58.6, 17890.0], [58.7, 17890.0], [58.8, 17890.0], [58.9, 17890.0], [59.0, 17906.0], [59.1, 17906.0], [59.2, 17906.0], [59.3, 17906.0], [59.4, 17910.0], [59.5, 17910.0], [59.6, 17910.0], [59.7, 17910.0], [59.8, 17917.0], [59.9, 17917.0], [60.0, 17917.0], [60.1, 17917.0], [60.2, 17918.0], [60.3, 17918.0], [60.4, 17918.0], [60.5, 17918.0], [60.6, 17933.0], [60.7, 17933.0], [60.8, 17933.0], [60.9, 17933.0], [61.0, 17953.0], [61.1, 17953.0], [61.2, 17953.0], [61.3, 17953.0], [61.4, 17957.0], [61.5, 17957.0], [61.6, 17957.0], [61.7, 17957.0], [61.8, 17959.0], [61.9, 17959.0], [62.0, 17959.0], [62.1, 17959.0], [62.2, 17964.0], [62.3, 17964.0], [62.4, 17964.0], [62.5, 17964.0], [62.6, 17975.0], [62.7, 17975.0], [62.8, 17975.0], [62.9, 17975.0], [63.0, 17987.0], [63.1, 17987.0], [63.2, 17987.0], [63.3, 17987.0], [63.4, 17997.0], [63.5, 17997.0], [63.6, 17997.0], [63.7, 17997.0], [63.8, 17999.0], [63.9, 17999.0], [64.0, 17999.0], [64.1, 17999.0], [64.2, 18001.0], [64.3, 18001.0], [64.4, 18001.0], [64.5, 18001.0], [64.6, 18030.0], [64.7, 18030.0], [64.8, 18030.0], [64.9, 18030.0], [65.0, 18038.0], [65.1, 18038.0], [65.2, 18038.0], [65.3, 18038.0], [65.4, 18074.0], [65.5, 18074.0], [65.6, 18074.0], [65.7, 18074.0], [65.8, 18096.0], [65.9, 18096.0], [66.0, 18096.0], [66.1, 18096.0], [66.2, 18096.0], [66.3, 18096.0], [66.4, 18096.0], [66.5, 18096.0], [66.6, 18100.0], [66.7, 18100.0], [66.8, 18100.0], [66.9, 18100.0], [67.0, 18108.0], [67.1, 18108.0], [67.2, 18108.0], [67.3, 18108.0], [67.4, 18113.0], [67.5, 18113.0], [67.6, 18113.0], [67.7, 18113.0], [67.8, 18132.0], [67.9, 18132.0], [68.0, 18132.0], [68.1, 18132.0], [68.2, 18132.0], [68.3, 18132.0], [68.4, 18132.0], [68.5, 18132.0], [68.6, 18139.0], [68.7, 18139.0], [68.8, 18139.0], [68.9, 18139.0], [69.0, 18166.0], [69.1, 18166.0], [69.2, 18166.0], [69.3, 18166.0], [69.4, 18168.0], [69.5, 18168.0], [69.6, 18168.0], [69.7, 18168.0], [69.8, 18171.0], [69.9, 18171.0], [70.0, 18171.0], [70.1, 18171.0], [70.2, 18182.0], [70.3, 18182.0], [70.4, 18182.0], [70.5, 18182.0], [70.6, 18183.0], [70.7, 18183.0], [70.8, 18183.0], [70.9, 18183.0], [71.0, 18201.0], [71.1, 18201.0], [71.2, 18201.0], [71.3, 18201.0], [71.4, 18206.0], [71.5, 18206.0], [71.6, 18206.0], [71.7, 18206.0], [71.8, 18215.0], [71.9, 18215.0], [72.0, 18215.0], [72.1, 18215.0], [72.2, 18220.0], [72.3, 18220.0], [72.4, 18220.0], [72.5, 18220.0], [72.6, 18226.0], [72.7, 18226.0], [72.8, 18226.0], [72.9, 18226.0], [73.0, 18235.0], [73.1, 18235.0], [73.2, 18235.0], [73.3, 18235.0], [73.4, 18269.0], [73.5, 18269.0], [73.6, 18269.0], [73.7, 18269.0], [73.8, 18280.0], [73.9, 18280.0], [74.0, 18280.0], [74.1, 18280.0], [74.2, 18323.0], [74.3, 18323.0], [74.4, 18323.0], [74.5, 18323.0], [74.6, 18326.0], [74.7, 18326.0], [74.8, 18326.0], [74.9, 18326.0], [75.0, 18335.0], [75.1, 18335.0], [75.2, 18335.0], [75.3, 18359.0], [75.4, 18359.0], [75.5, 18359.0], [75.6, 18359.0], [75.7, 18377.0], [75.8, 18377.0], [75.9, 18377.0], [76.0, 18377.0], [76.1, 18389.0], [76.2, 18389.0], [76.3, 18389.0], [76.4, 18389.0], [76.5, 18395.0], [76.6, 18395.0], [76.7, 18395.0], [76.8, 18395.0], [76.9, 18406.0], [77.0, 18406.0], [77.1, 18406.0], [77.2, 18406.0], [77.3, 18410.0], [77.4, 18410.0], [77.5, 18410.0], [77.6, 18410.0], [77.7, 18429.0], [77.8, 18429.0], [77.9, 18429.0], [78.0, 18429.0], [78.1, 18438.0], [78.2, 18438.0], [78.3, 18438.0], [78.4, 18438.0], [78.5, 18491.0], [78.6, 18491.0], [78.7, 18491.0], [78.8, 18491.0], [78.9, 18511.0], [79.0, 18511.0], [79.1, 18511.0], [79.2, 18511.0], [79.3, 18526.0], [79.4, 18526.0], [79.5, 18526.0], [79.6, 18526.0], [79.7, 18530.0], [79.8, 18530.0], [79.9, 18530.0], [80.0, 18530.0], [80.1, 18551.0], [80.2, 18551.0], [80.3, 18551.0], [80.4, 18551.0], [80.5, 18558.0], [80.6, 18558.0], [80.7, 18558.0], [80.8, 18558.0], [80.9, 18566.0], [81.0, 18566.0], [81.1, 18566.0], [81.2, 18566.0], [81.3, 18567.0], [81.4, 18567.0], [81.5, 18567.0], [81.6, 18567.0], [81.7, 18570.0], [81.8, 18570.0], [81.9, 18570.0], [82.0, 18570.0], [82.1, 18583.0], [82.2, 18583.0], [82.3, 18583.0], [82.4, 18583.0], [82.5, 18631.0], [82.6, 18631.0], [82.7, 18631.0], [82.8, 18631.0], [82.9, 18655.0], [83.0, 18655.0], [83.1, 18655.0], [83.2, 18655.0], [83.3, 18668.0], [83.4, 18668.0], [83.5, 18668.0], [83.6, 18668.0], [83.7, 18803.0], [83.8, 18803.0], [83.9, 18803.0], [84.0, 18803.0], [84.1, 18815.0], [84.2, 18815.0], [84.3, 18815.0], [84.4, 18815.0], [84.5, 18822.0], [84.6, 18822.0], [84.7, 18822.0], [84.8, 18822.0], [84.9, 18855.0], [85.0, 18855.0], [85.1, 18855.0], [85.2, 18855.0], [85.3, 18856.0], [85.4, 18856.0], [85.5, 18856.0], [85.6, 18856.0], [85.7, 18909.0], [85.8, 18909.0], [85.9, 18909.0], [86.0, 18909.0], [86.1, 18935.0], [86.2, 18935.0], [86.3, 18935.0], [86.4, 18935.0], [86.5, 18954.0], [86.6, 18954.0], [86.7, 18954.0], [86.8, 18954.0], [86.9, 19008.0], [87.0, 19008.0], [87.1, 19008.0], [87.2, 19008.0], [87.3, 19064.0], [87.4, 19064.0], [87.5, 19064.0], [87.6, 19064.0], [87.7, 19067.0], [87.8, 19067.0], [87.9, 19067.0], [88.0, 19067.0], [88.1, 19071.0], [88.2, 19071.0], [88.3, 19071.0], [88.4, 19071.0], [88.5, 19075.0], [88.6, 19075.0], [88.7, 19075.0], [88.8, 19075.0], [88.9, 19092.0], [89.0, 19092.0], [89.1, 19092.0], [89.2, 19092.0], [89.3, 19092.0], [89.4, 19092.0], [89.5, 19092.0], [89.6, 19092.0], [89.7, 19098.0], [89.8, 19098.0], [89.9, 19098.0], [90.0, 19098.0], [90.1, 19125.0], [90.2, 19125.0], [90.3, 19125.0], [90.4, 19125.0], [90.5, 19140.0], [90.6, 19140.0], [90.7, 19140.0], [90.8, 19140.0], [90.9, 19154.0], [91.0, 19154.0], [91.1, 19154.0], [91.2, 19154.0], [91.3, 19194.0], [91.4, 19194.0], [91.5, 19194.0], [91.6, 19194.0], [91.7, 19261.0], [91.8, 19261.0], [91.9, 19261.0], [92.0, 19261.0], [92.1, 19407.0], [92.2, 19407.0], [92.3, 19407.0], [92.4, 19407.0], [92.5, 19409.0], [92.6, 19409.0], [92.7, 19409.0], [92.8, 19409.0], [92.9, 19446.0], [93.0, 19446.0], [93.1, 19446.0], [93.2, 19446.0], [93.3, 19923.0], [93.4, 19923.0], [93.5, 19923.0], [93.6, 19923.0], [93.7, 19953.0], [93.8, 19953.0], [93.9, 19953.0], [94.0, 19953.0], [94.1, 19998.0], [94.2, 19998.0], [94.3, 19998.0], [94.4, 19998.0], [94.5, 20031.0], [94.6, 20031.0], [94.7, 20031.0], [94.8, 20031.0], [94.9, 20040.0], [95.0, 20040.0], [95.1, 20040.0], [95.2, 20040.0], [95.3, 20057.0], [95.4, 20057.0], [95.5, 20057.0], [95.6, 20057.0], [95.7, 20062.0], [95.8, 20062.0], [95.9, 20062.0], [96.0, 20062.0], [96.1, 20175.0], [96.2, 20175.0], [96.3, 20175.0], [96.4, 20175.0], [96.5, 20225.0], [96.6, 20225.0], [96.7, 20225.0], [96.8, 20225.0], [96.9, 20277.0], [97.0, 20277.0], [97.1, 20277.0], [97.2, 20277.0], [97.3, 20305.0], [97.4, 20305.0], [97.5, 20305.0], [97.6, 20305.0], [97.7, 20334.0], [97.8, 20334.0], [97.9, 20334.0], [98.0, 20334.0], [98.1, 20420.0], [98.2, 20420.0], [98.3, 20420.0], [98.4, 20420.0], [98.5, 20449.0], [98.6, 20449.0], [98.7, 20449.0], [98.8, 20449.0], [98.9, 20462.0], [99.0, 20462.0], [99.1, 20462.0], [99.2, 20462.0], [99.3, 20476.0], [99.4, 20476.0], [99.5, 20476.0], [99.6, 20476.0], [99.7, 20527.0], [99.8, 20527.0], [99.9, 20527.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[0.0, 506.0], [0.1, 506.0], [0.2, 506.0], [0.3, 506.0], [0.4, 1161.0], [0.5, 1161.0], [0.6, 1161.0], [0.7, 1161.0], [0.8, 1168.0], [0.9, 1168.0], [1.0, 1168.0], [1.1, 1168.0], [1.2, 1168.0], [1.3, 1168.0], [1.4, 1168.0], [1.5, 1168.0], [1.6, 1168.0], [1.7, 1168.0], [1.8, 1168.0], [1.9, 1168.0], [2.0, 1168.0], [2.1, 1168.0], [2.2, 1168.0], [2.3, 1168.0], [2.4, 1169.0], [2.5, 1169.0], [2.6, 1169.0], [2.7, 1169.0], [2.8, 1172.0], [2.9, 1172.0], [3.0, 1172.0], [3.1, 1172.0], [3.2, 1172.0], [3.3, 1172.0], [3.4, 1172.0], [3.5, 1172.0], [3.6, 1173.0], [3.7, 1173.0], [3.8, 1173.0], [3.9, 1173.0], [4.0, 1173.0], [4.1, 1173.0], [4.2, 1173.0], [4.3, 1173.0], [4.4, 1173.0], [4.5, 1173.0], [4.6, 1173.0], [4.7, 1174.0], [4.8, 1174.0], [4.9, 1174.0], [5.0, 1174.0], [5.1, 1175.0], [5.2, 1175.0], [5.3, 1175.0], [5.4, 1175.0], [5.5, 1175.0], [5.6, 1175.0], [5.7, 1175.0], [5.8, 1175.0], [5.9, 1175.0], [6.0, 1175.0], [6.1, 1175.0], [6.2, 1175.0], [6.3, 1176.0], [6.4, 1176.0], [6.5, 1176.0], [6.6, 1176.0], [6.7, 1176.0], [6.8, 1176.0], [6.9, 1176.0], [7.0, 1176.0], [7.1, 1176.0], [7.2, 1176.0], [7.3, 1176.0], [7.4, 1176.0], [7.5, 1177.0], [7.6, 1177.0], [7.7, 1177.0], [7.8, 1177.0], [7.9, 1177.0], [8.0, 1177.0], [8.1, 1177.0], [8.2, 1177.0], [8.3, 1177.0], [8.4, 1177.0], [8.5, 1177.0], [8.6, 1178.0], [8.7, 1178.0], [8.8, 1178.0], [8.9, 1178.0], [9.0, 1179.0], [9.1, 1179.0], [9.2, 1179.0], [9.3, 1179.0], [9.4, 1180.0], [9.5, 1180.0], [9.6, 1180.0], [9.7, 1180.0], [9.8, 1180.0], [9.9, 1180.0], [10.0, 1180.0], [10.1, 1180.0], [10.2, 1180.0], [10.3, 1180.0], [10.4, 1180.0], [10.5, 1180.0], [10.6, 1180.0], [10.7, 1180.0], [10.8, 1180.0], [10.9, 1180.0], [11.0, 1181.0], [11.1, 1181.0], [11.2, 1181.0], [11.3, 1181.0], [11.4, 1181.0], [11.5, 1181.0], [11.6, 1181.0], [11.7, 1181.0], [11.8, 1181.0], [11.9, 1181.0], [12.0, 1181.0], [12.1, 1181.0], [12.2, 1181.0], [12.3, 1181.0], [12.4, 1181.0], [12.5, 1181.0], [12.6, 1181.0], [12.7, 1181.0], [12.8, 1181.0], [12.9, 1182.0], [13.0, 1182.0], [13.1, 1182.0], [13.2, 1182.0], [13.3, 1182.0], [13.4, 1182.0], [13.5, 1182.0], [13.6, 1182.0], [13.7, 1182.0], [13.8, 1182.0], [13.9, 1182.0], [14.0, 1182.0], [14.1, 1183.0], [14.2, 1183.0], [14.3, 1183.0], [14.4, 1183.0], [14.5, 1183.0], [14.6, 1183.0], [14.7, 1183.0], [14.8, 1183.0], [14.9, 1183.0], [15.0, 1183.0], [15.1, 1183.0], [15.2, 1183.0], [15.3, 1184.0], [15.4, 1184.0], [15.5, 1184.0], [15.6, 1184.0], [15.7, 1184.0], [15.8, 1184.0], [15.9, 1184.0], [16.0, 1184.0], [16.1, 1185.0], [16.2, 1185.0], [16.3, 1185.0], [16.4, 1185.0], [16.5, 1185.0], [16.6, 1185.0], [16.7, 1185.0], [16.8, 1185.0], [16.9, 1185.0], [17.0, 1185.0], [17.1, 1185.0], [17.2, 1186.0], [17.3, 1186.0], [17.4, 1186.0], [17.5, 1186.0], [17.6, 1186.0], [17.7, 1186.0], [17.8, 1186.0], [17.9, 1186.0], [18.0, 1187.0], [18.1, 1187.0], [18.2, 1187.0], [18.3, 1187.0], [18.4, 1188.0], [18.5, 1188.0], [18.6, 1188.0], [18.7, 1188.0], [18.8, 1188.0], [18.9, 1188.0], [19.0, 1188.0], [19.1, 1188.0], [19.2, 1188.0], [19.3, 1188.0], [19.4, 1188.0], [19.5, 1188.0], [19.6, 1188.0], [19.7, 1188.0], [19.8, 1188.0], [19.9, 1188.0], [20.0, 1188.0], [20.1, 1188.0], [20.2, 1188.0], [20.3, 1188.0], [20.4, 1188.0], [20.5, 1188.0], [20.6, 1188.0], [20.7, 1188.0], [20.8, 1189.0], [20.9, 1189.0], [21.0, 1189.0], [21.1, 1190.0], [21.2, 1190.0], [21.3, 1190.0], [21.4, 1190.0], [21.5, 1190.0], [21.6, 1190.0], [21.7, 1190.0], [21.8, 1190.0], [21.9, 1190.0], [22.0, 1190.0], [22.1, 1190.0], [22.2, 1190.0], [22.3, 1190.0], [22.4, 1190.0], [22.5, 1190.0], [22.6, 1190.0], [22.7, 1190.0], [22.8, 1190.0], [22.9, 1190.0], [23.0, 1190.0], [23.1, 1191.0], [23.2, 1191.0], [23.3, 1191.0], [23.4, 1191.0], [23.5, 1191.0], [23.6, 1191.0], [23.7, 1191.0], [23.8, 1191.0], [23.9, 1191.0], [24.0, 1191.0], [24.1, 1191.0], [24.2, 1191.0], [24.3, 1191.0], [24.4, 1191.0], [24.5, 1191.0], [24.6, 1191.0], [24.7, 1192.0], [24.8, 1192.0], [24.9, 1192.0], [25.0, 1192.0], [25.1, 1192.0], [25.2, 1192.0], [25.3, 1192.0], [25.4, 1193.0], [25.5, 1193.0], [25.6, 1193.0], [25.7, 1193.0], [25.8, 1193.0], [25.9, 1193.0], [26.0, 1193.0], [26.1, 1193.0], [26.2, 1193.0], [26.3, 1193.0], [26.4, 1193.0], [26.5, 1193.0], [26.6, 1193.0], [26.7, 1193.0], [26.8, 1193.0], [26.9, 1193.0], [27.0, 1193.0], [27.1, 1193.0], [27.2, 1193.0], [27.3, 1193.0], [27.4, 1194.0], [27.5, 1194.0], [27.6, 1194.0], [27.7, 1194.0], [27.8, 1194.0], [27.9, 1194.0], [28.0, 1194.0], [28.1, 1194.0], [28.2, 1194.0], [28.3, 1194.0], [28.4, 1194.0], [28.5, 1194.0], [28.6, 1194.0], [28.7, 1194.0], [28.8, 1194.0], [28.9, 1194.0], [29.0, 1194.0], [29.1, 1194.0], [29.2, 1194.0], [29.3, 1194.0], [29.4, 1194.0], [29.5, 1194.0], [29.6, 1194.0], [29.7, 1195.0], [29.8, 1195.0], [29.9, 1195.0], [30.0, 1195.0], [30.1, 1195.0], [30.2, 1195.0], [30.3, 1195.0], [30.4, 1195.0], [30.5, 1195.0], [30.6, 1195.0], [30.7, 1195.0], [30.8, 1195.0], [30.9, 1196.0], [31.0, 1196.0], [31.1, 1196.0], [31.2, 1196.0], [31.3, 1196.0], [31.4, 1196.0], [31.5, 1196.0], [31.6, 1196.0], [31.7, 1196.0], [31.8, 1196.0], [31.9, 1196.0], [32.0, 1196.0], [32.1, 1196.0], [32.2, 1196.0], [32.3, 1196.0], [32.4, 1196.0], [32.5, 1197.0], [32.6, 1197.0], [32.7, 1197.0], [32.8, 1197.0], [32.9, 1197.0], [33.0, 1197.0], [33.1, 1197.0], [33.2, 1197.0], [33.3, 1197.0], [33.4, 1197.0], [33.5, 1197.0], [33.6, 1198.0], [33.7, 1198.0], [33.8, 1198.0], [33.9, 1198.0], [34.0, 1198.0], [34.1, 1198.0], [34.2, 1198.0], [34.3, 1198.0], [34.4, 1199.0], [34.5, 1199.0], [34.6, 1199.0], [34.7, 1199.0], [34.8, 1199.0], [34.9, 1199.0], [35.0, 1199.0], [35.1, 1199.0], [35.2, 1199.0], [35.3, 1199.0], [35.4, 1199.0], [35.5, 1199.0], [35.6, 1199.0], [35.7, 1199.0], [35.8, 1199.0], [35.9, 1199.0], [36.0, 1199.0], [36.1, 1199.0], [36.2, 1199.0], [36.3, 1199.0], [36.4, 1199.0], [36.5, 1199.0], [36.6, 1199.0], [36.7, 1199.0], [36.8, 1199.0], [36.9, 1199.0], [37.0, 1199.0], [37.1, 1199.0], [37.2, 1199.0], [37.3, 1199.0], [37.4, 1199.0], [37.5, 1200.0], [37.6, 1200.0], [37.7, 1200.0], [37.8, 1200.0], [37.9, 1200.0], [38.0, 1200.0], [38.1, 1200.0], [38.2, 1200.0], [38.3, 1200.0], [38.4, 1200.0], [38.5, 1200.0], [38.6, 1200.0], [38.7, 1201.0], [38.8, 1201.0], [38.9, 1201.0], [39.0, 1201.0], [39.1, 1201.0], [39.2, 1201.0], [39.3, 1201.0], [39.4, 1201.0], [39.5, 1202.0], [39.6, 1202.0], [39.7, 1202.0], [39.8, 1202.0], [39.9, 1202.0], [40.0, 1202.0], [40.1, 1202.0], [40.2, 1202.0], [40.3, 1202.0], [40.4, 1202.0], [40.5, 1202.0], [40.6, 1202.0], [40.7, 1202.0], [40.8, 1202.0], [40.9, 1202.0], [41.0, 1202.0], [41.1, 1202.0], [41.2, 1202.0], [41.3, 1202.0], [41.4, 1202.0], [41.5, 1203.0], [41.6, 1203.0], [41.7, 1203.0], [41.8, 1203.0], [41.9, 1203.0], [42.0, 1203.0], [42.1, 1203.0], [42.2, 1203.0], [42.3, 1203.0], [42.4, 1203.0], [42.5, 1203.0], [42.6, 1203.0], [42.7, 1203.0], [42.8, 1203.0], [42.9, 1203.0], [43.0, 1204.0], [43.1, 1204.0], [43.2, 1204.0], [43.3, 1204.0], [43.4, 1204.0], [43.5, 1204.0], [43.6, 1204.0], [43.7, 1204.0], [43.8, 1204.0], [43.9, 1204.0], [44.0, 1204.0], [44.1, 1204.0], [44.2, 1204.0], [44.3, 1204.0], [44.4, 1204.0], [44.5, 1204.0], [44.6, 1204.0], [44.7, 1204.0], [44.8, 1204.0], [44.9, 1204.0], [45.0, 1205.0], [45.1, 1205.0], [45.2, 1205.0], [45.3, 1205.0], [45.4, 1205.0], [45.5, 1205.0], [45.6, 1205.0], [45.7, 1205.0], [45.8, 1205.0], [45.9, 1205.0], [46.0, 1205.0], [46.1, 1205.0], [46.2, 1205.0], [46.3, 1205.0], [46.4, 1205.0], [46.5, 1205.0], [46.6, 1205.0], [46.7, 1205.0], [46.8, 1205.0], [46.9, 1206.0], [47.0, 1206.0], [47.1, 1206.0], [47.2, 1206.0], [47.3, 1206.0], [47.4, 1206.0], [47.5, 1206.0], [47.6, 1206.0], [47.7, 1206.0], [47.8, 1206.0], [47.9, 1206.0], [48.0, 1206.0], [48.1, 1206.0], [48.2, 1206.0], [48.3, 1206.0], [48.4, 1206.0], [48.5, 1206.0], [48.6, 1206.0], [48.7, 1206.0], [48.8, 1206.0], [48.9, 1207.0], [49.0, 1207.0], [49.1, 1207.0], [49.2, 1207.0], [49.3, 1207.0], [49.4, 1207.0], [49.5, 1207.0], [49.6, 1207.0], [49.7, 1207.0], [49.8, 1207.0], [49.9, 1207.0], [50.0, 1207.0], [50.1, 1207.0], [50.2, 1207.0], [50.3, 1207.0], [50.4, 1208.0], [50.5, 1208.0], [50.6, 1208.0], [50.7, 1208.0], [50.8, 1208.0], [50.9, 1208.0], [51.0, 1208.0], [51.1, 1208.0], [51.2, 1209.0], [51.3, 1209.0], [51.4, 1209.0], [51.5, 1209.0], [51.6, 1209.0], [51.7, 1209.0], [51.8, 1209.0], [51.9, 1209.0], [52.0, 1209.0], [52.1, 1209.0], [52.2, 1209.0], [52.3, 1209.0], [52.4, 1209.0], [52.5, 1209.0], [52.6, 1209.0], [52.7, 1209.0], [52.8, 1209.0], [52.9, 1209.0], [53.0, 1209.0], [53.1, 1209.0], [53.2, 1210.0], [53.3, 1210.0], [53.4, 1210.0], [53.5, 1210.0], [53.6, 1211.0], [53.7, 1211.0], [53.8, 1211.0], [53.9, 1211.0], [54.0, 1212.0], [54.1, 1212.0], [54.2, 1212.0], [54.3, 1212.0], [54.4, 1212.0], [54.5, 1212.0], [54.6, 1212.0], [54.7, 1212.0], [54.8, 1212.0], [54.9, 1212.0], [55.0, 1212.0], [55.1, 1213.0], [55.2, 1213.0], [55.3, 1213.0], [55.4, 1213.0], [55.5, 1213.0], [55.6, 1213.0], [55.7, 1213.0], [55.8, 1213.0], [55.9, 1213.0], [56.0, 1213.0], [56.1, 1213.0], [56.2, 1213.0], [56.3, 1213.0], [56.4, 1213.0], [56.5, 1213.0], [56.6, 1213.0], [56.7, 1213.0], [56.8, 1213.0], [56.9, 1213.0], [57.0, 1213.0], [57.1, 1214.0], [57.2, 1214.0], [57.3, 1214.0], [57.4, 1214.0], [57.5, 1214.0], [57.6, 1214.0], [57.7, 1214.0], [57.8, 1214.0], [57.9, 1214.0], [58.0, 1214.0], [58.1, 1214.0], [58.2, 1214.0], [58.3, 1214.0], [58.4, 1214.0], [58.5, 1214.0], [58.6, 1214.0], [58.7, 1214.0], [58.8, 1214.0], [58.9, 1214.0], [59.0, 1215.0], [59.1, 1215.0], [59.2, 1215.0], [59.3, 1215.0], [59.4, 1215.0], [59.5, 1215.0], [59.6, 1215.0], [59.7, 1215.0], [59.8, 1215.0], [59.9, 1215.0], [60.0, 1215.0], [60.1, 1215.0], [60.2, 1216.0], [60.3, 1216.0], [60.4, 1216.0], [60.5, 1216.0], [60.6, 1216.0], [60.7, 1216.0], [60.8, 1216.0], [60.9, 1216.0], [61.0, 1216.0], [61.1, 1216.0], [61.2, 1216.0], [61.3, 1216.0], [61.4, 1216.0], [61.5, 1216.0], [61.6, 1216.0], [61.7, 1216.0], [61.8, 1217.0], [61.9, 1217.0], [62.0, 1217.0], [62.1, 1217.0], [62.2, 1218.0], [62.3, 1218.0], [62.4, 1218.0], [62.5, 1218.0], [62.6, 1218.0], [62.7, 1218.0], [62.8, 1218.0], [62.9, 1219.0], [63.0, 1219.0], [63.1, 1219.0], [63.2, 1219.0], [63.3, 1219.0], [63.4, 1219.0], [63.5, 1219.0], [63.6, 1219.0], [63.7, 1220.0], [63.8, 1220.0], [63.9, 1220.0], [64.0, 1220.0], [64.1, 1220.0], [64.2, 1220.0], [64.3, 1220.0], [64.4, 1220.0], [64.5, 1220.0], [64.6, 1220.0], [64.7, 1220.0], [64.8, 1220.0], [64.9, 1221.0], [65.0, 1221.0], [65.1, 1221.0], [65.2, 1221.0], [65.3, 1221.0], [65.4, 1221.0], [65.5, 1221.0], [65.6, 1221.0], [65.7, 1223.0], [65.8, 1223.0], [65.9, 1223.0], [66.0, 1223.0], [66.1, 1224.0], [66.2, 1224.0], [66.3, 1224.0], [66.4, 1224.0], [66.5, 1225.0], [66.6, 1225.0], [66.7, 1225.0], [66.8, 1226.0], [66.9, 1226.0], [67.0, 1226.0], [67.1, 1226.0], [67.2, 1227.0], [67.3, 1227.0], [67.4, 1227.0], [67.5, 1227.0], [67.6, 1228.0], [67.7, 1228.0], [67.8, 1228.0], [67.9, 1228.0], [68.0, 1230.0], [68.1, 1230.0], [68.2, 1230.0], [68.3, 1230.0], [68.4, 1230.0], [68.5, 1230.0], [68.6, 1230.0], [68.7, 1230.0], [68.8, 1231.0], [68.9, 1231.0], [69.0, 1231.0], [69.1, 1231.0], [69.2, 1232.0], [69.3, 1232.0], [69.4, 1232.0], [69.5, 1232.0], [69.6, 1233.0], [69.7, 1233.0], [69.8, 1233.0], [69.9, 1233.0], [70.0, 1234.0], [70.1, 1234.0], [70.2, 1234.0], [70.3, 1234.0], [70.4, 1237.0], [70.5, 1237.0], [70.6, 1237.0], [70.7, 1237.0], [70.8, 1237.0], [70.9, 1237.0], [71.0, 1237.0], [71.1, 1240.0], [71.2, 1240.0], [71.3, 1240.0], [71.4, 1240.0], [71.5, 1241.0], [71.6, 1241.0], [71.7, 1241.0], [71.8, 1241.0], [71.9, 1241.0], [72.0, 1241.0], [72.1, 1241.0], [72.2, 1241.0], [72.3, 1243.0], [72.4, 1243.0], [72.5, 1243.0], [72.6, 1243.0], [72.7, 1247.0], [72.8, 1247.0], [72.9, 1247.0], [73.0, 1247.0], [73.1, 1248.0], [73.2, 1248.0], [73.3, 1248.0], [73.4, 1248.0], [73.5, 1251.0], [73.6, 1251.0], [73.7, 1251.0], [73.8, 1251.0], [73.9, 1253.0], [74.0, 1253.0], [74.1, 1253.0], [74.2, 1253.0], [74.3, 1255.0], [74.4, 1255.0], [74.5, 1255.0], [74.6, 1255.0], [74.7, 1259.0], [74.8, 1259.0], [74.9, 1259.0], [75.0, 1269.0], [75.1, 1269.0], [75.2, 1269.0], [75.3, 1269.0], [75.4, 1285.0], [75.5, 1285.0], [75.6, 1285.0], [75.7, 1285.0], [75.8, 1298.0], [75.9, 1298.0], [76.0, 1298.0], [76.1, 1298.0], [76.2, 1299.0], [76.3, 1299.0], [76.4, 1299.0], [76.5, 1299.0], [76.6, 1301.0], [76.7, 1301.0], [76.8, 1301.0], [76.9, 1301.0], [77.0, 1313.0], [77.1, 1313.0], [77.2, 1313.0], [77.3, 1313.0], [77.4, 1328.0], [77.5, 1328.0], [77.6, 1328.0], [77.7, 1328.0], [77.8, 1349.0], [77.9, 1349.0], [78.0, 1349.0], [78.1, 1349.0], [78.2, 1474.0], [78.3, 1474.0], [78.4, 1474.0], [78.5, 1474.0], [78.6, 1487.0], [78.7, 1487.0], [78.8, 1487.0], [78.9, 1487.0], [79.0, 1488.0], [79.1, 1488.0], [79.2, 1488.0], [79.3, 1491.0], [79.4, 1491.0], [79.5, 1491.0], [79.6, 1491.0], [79.7, 1492.0], [79.8, 1492.0], [79.9, 1492.0], [80.0, 1492.0], [80.1, 1497.0], [80.2, 1497.0], [80.3, 1497.0], [80.4, 1497.0], [80.5, 1503.0], [80.6, 1503.0], [80.7, 1503.0], [80.8, 1503.0], [80.9, 1504.0], [81.0, 1504.0], [81.1, 1504.0], [81.2, 1504.0], [81.3, 1506.0], [81.4, 1506.0], [81.5, 1506.0], [81.6, 1506.0], [81.7, 1508.0], [81.8, 1508.0], [81.9, 1508.0], [82.0, 1508.0], [82.1, 1532.0], [82.2, 1532.0], [82.3, 1532.0], [82.4, 1532.0], [82.5, 1534.0], [82.6, 1534.0], [82.7, 1534.0], [82.8, 1534.0], [82.9, 1540.0], [83.0, 1540.0], [83.1, 1540.0], [83.2, 1540.0], [83.3, 1566.0], [83.4, 1566.0], [83.5, 1566.0], [83.6, 1568.0], [83.7, 1568.0], [83.8, 1568.0], [83.9, 1568.0], [84.0, 1570.0], [84.1, 1570.0], [84.2, 1570.0], [84.3, 1570.0], [84.4, 1576.0], [84.5, 1576.0], [84.6, 1576.0], [84.7, 1576.0], [84.8, 1585.0], [84.9, 1585.0], [85.0, 1585.0], [85.1, 1585.0], [85.2, 1587.0], [85.3, 1587.0], [85.4, 1587.0], [85.5, 1587.0], [85.6, 1606.0], [85.7, 1606.0], [85.8, 1606.0], [85.9, 1606.0], [86.0, 1862.0], [86.1, 1862.0], [86.2, 1862.0], [86.3, 1862.0], [86.4, 1962.0], [86.5, 1962.0], [86.6, 1962.0], [86.7, 1962.0], [86.8, 1998.0], [86.9, 1998.0], [87.0, 1998.0], [87.1, 1998.0], [87.2, 2016.0], [87.3, 2016.0], [87.4, 2016.0], [87.5, 2016.0], [87.6, 2016.0], [87.7, 2016.0], [87.8, 2016.0], [87.9, 2069.0], [88.0, 2069.0], [88.1, 2069.0], [88.2, 2069.0], [88.3, 2199.0], [88.4, 2199.0], [88.5, 2199.0], [88.6, 2199.0], [88.7, 2200.0], [88.8, 2200.0], [88.9, 2200.0], [89.0, 2200.0], [89.1, 2213.0], [89.2, 2213.0], [89.3, 2213.0], [89.4, 2213.0], [89.5, 2235.0], [89.6, 2235.0], [89.7, 2235.0], [89.8, 2235.0], [89.9, 2249.0], [90.0, 2249.0], [90.1, 2249.0], [90.2, 2249.0], [90.3, 2290.0], [90.4, 2290.0], [90.5, 2290.0], [90.6, 2290.0], [90.7, 2391.0], [90.8, 2391.0], [90.9, 2391.0], [91.0, 2391.0], [91.1, 2582.0], [91.2, 2582.0], [91.3, 2582.0], [91.4, 2582.0], [91.5, 3203.0], [91.6, 3203.0], [91.7, 3203.0], [91.8, 4170.0], [91.9, 4170.0], [92.0, 4170.0], [92.1, 4170.0], [92.2, 4174.0], [92.3, 4174.0], [92.4, 4174.0], [92.5, 4174.0], [92.6, 4195.0], [92.7, 4195.0], [92.8, 4195.0], [92.9, 4195.0], [93.0, 4202.0], [93.1, 4202.0], [93.2, 4202.0], [93.3, 4202.0], [93.4, 5176.0], [93.5, 5176.0], [93.6, 5176.0], [93.7, 5176.0], [93.8, 5192.0], [93.9, 5192.0], [94.0, 5192.0], [94.1, 5192.0], [94.2, 5193.0], [94.3, 5193.0], [94.4, 5193.0], [94.5, 5193.0], [94.6, 5197.0], [94.7, 5197.0], [94.8, 5197.0], [94.9, 5197.0], [95.0, 5201.0], [95.1, 5201.0], [95.2, 5201.0], [95.3, 5201.0], [95.4, 5255.0], [95.5, 5255.0], [95.6, 5255.0], [95.7, 5255.0], [95.8, 10350.0], [95.9, 10350.0], [96.0, 10350.0], [96.1, 21189.0], [96.2, 21189.0], [96.3, 21189.0], [96.4, 21189.0], [96.5, 27190.0], [96.6, 27190.0], [96.7, 27190.0], [96.8, 27190.0], [96.9, 29210.0], [97.0, 29210.0], [97.1, 29210.0], [97.2, 29210.0], [97.3, 29540.0], [97.4, 29540.0], [97.5, 29540.0], [97.6, 29540.0], [97.7, 34181.0], [97.8, 34181.0], [97.9, 34181.0], [98.0, 34181.0], [98.1, 37227.0], [98.2, 37227.0], [98.3, 37227.0], [98.4, 37227.0], [98.5, 43528.0], [98.6, 43528.0], [98.7, 43528.0], [98.8, 43528.0], [98.9, 76218.0], [99.0, 76218.0], [99.1, 76218.0], [99.2, 76218.0], [99.3, 76492.0], [99.4, 76492.0], [99.5, 76492.0], [99.6, 76492.0], [99.7, 77543.0], [99.8, 77543.0], [99.9, 77543.0]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[0.0, 291.0], [0.1, 291.0], [0.2, 291.0], [0.3, 291.0], [0.4, 291.0], [0.5, 291.0], [0.6, 291.0], [0.7, 291.0], [0.8, 291.0], [0.9, 291.0], [1.0, 291.0], [1.1, 291.0], [1.2, 291.0], [1.3, 292.0], [1.4, 292.0], [1.5, 292.0], [1.6, 292.0], [1.7, 292.0], [1.8, 292.0], [1.9, 292.0], [2.0, 292.0], [2.1, 292.0], [2.2, 292.0], [2.3, 292.0], [2.4, 292.0], [2.5, 293.0], [2.6, 293.0], [2.7, 293.0], [2.8, 293.0], [2.9, 293.0], [3.0, 293.0], [3.1, 293.0], [3.2, 293.0], [3.3, 293.0], [3.4, 293.0], [3.5, 293.0], [3.6, 293.0], [3.7, 293.0], [3.8, 293.0], [3.9, 293.0], [4.0, 293.0], [4.1, 293.0], [4.2, 293.0], [4.3, 293.0], [4.4, 293.0], [4.5, 293.0], [4.6, 294.0], [4.7, 294.0], [4.8, 294.0], [4.9, 294.0], [5.0, 294.0], [5.1, 294.0], [5.2, 294.0], [5.3, 294.0], [5.4, 294.0], [5.5, 294.0], [5.6, 294.0], [5.7, 294.0], [5.8, 294.0], [5.9, 294.0], [6.0, 294.0], [6.1, 294.0], [6.2, 294.0], [6.3, 294.0], [6.4, 294.0], [6.5, 294.0], [6.6, 294.0], [6.7, 294.0], [6.8, 294.0], [6.9, 294.0], [7.0, 294.0], [7.1, 294.0], [7.2, 294.0], [7.3, 294.0], [7.4, 295.0], [7.5, 295.0], [7.6, 295.0], [7.7, 295.0], [7.8, 295.0], [7.9, 295.0], [8.0, 295.0], [8.1, 295.0], [8.2, 295.0], [8.3, 295.0], [8.4, 295.0], [8.5, 295.0], [8.6, 295.0], [8.7, 296.0], [8.8, 296.0], [8.9, 296.0], [9.0, 296.0], [9.1, 296.0], [9.2, 296.0], [9.3, 296.0], [9.4, 296.0], [9.5, 296.0], [9.6, 296.0], [9.7, 296.0], [9.8, 296.0], [9.9, 296.0], [10.0, 296.0], [10.1, 296.0], [10.2, 296.0], [10.3, 297.0], [10.4, 297.0], [10.5, 297.0], [10.6, 297.0], [10.7, 297.0], [10.8, 297.0], [10.9, 297.0], [11.0, 297.0], [11.1, 297.0], [11.2, 297.0], [11.3, 297.0], [11.4, 297.0], [11.5, 299.0], [11.6, 299.0], [11.7, 299.0], [11.8, 299.0], [11.9, 299.0], [12.0, 299.0], [12.1, 299.0], [12.2, 299.0], [12.3, 300.0], [12.4, 300.0], [12.5, 300.0], [12.6, 300.0], [12.7, 300.0], [12.8, 300.0], [12.9, 300.0], [13.0, 300.0], [13.1, 300.0], [13.2, 300.0], [13.3, 300.0], [13.4, 300.0], [13.5, 300.0], [13.6, 302.0], [13.7, 302.0], [13.8, 302.0], [13.9, 302.0], [14.0, 305.0], [14.1, 305.0], [14.2, 305.0], [14.3, 305.0], [14.4, 305.0], [14.5, 305.0], [14.6, 305.0], [14.7, 305.0], [14.8, 306.0], [14.9, 306.0], [15.0, 306.0], [15.1, 306.0], [15.2, 307.0], [15.3, 307.0], [15.4, 307.0], [15.5, 307.0], [15.6, 309.0], [15.7, 309.0], [15.8, 309.0], [15.9, 309.0], [16.0, 310.0], [16.1, 310.0], [16.2, 310.0], [16.3, 310.0], [16.4, 312.0], [16.5, 312.0], [16.6, 312.0], [16.7, 312.0], [16.8, 312.0], [16.9, 312.0], [17.0, 312.0], [17.1, 312.0], [17.2, 312.0], [17.3, 331.0], [17.4, 331.0], [17.5, 331.0], [17.6, 331.0], [17.7, 341.0], [17.8, 341.0], [17.9, 341.0], [18.0, 341.0], [18.1, 1029.0], [18.2, 1029.0], [18.3, 1029.0], [18.4, 1029.0], [18.5, 1056.0], [18.6, 1056.0], [18.7, 1056.0], [18.8, 1056.0], [18.9, 1066.0], [19.0, 1066.0], [19.1, 1066.0], [19.2, 1066.0], [19.3, 1293.0], [19.4, 1293.0], [19.5, 1293.0], [19.6, 1293.0], [19.7, 1299.0], [19.8, 1299.0], [19.9, 1299.0], [20.0, 1299.0], [20.1, 1300.0], [20.2, 1300.0], [20.3, 1300.0], [20.4, 1300.0], [20.5, 1303.0], [20.6, 1303.0], [20.7, 1303.0], [20.8, 1303.0], [20.9, 1303.0], [21.0, 2291.0], [21.1, 2291.0], [21.2, 2291.0], [21.3, 2291.0], [21.4, 2293.0], [21.5, 2293.0], [21.6, 2293.0], [21.7, 2293.0], [21.8, 2294.0], [21.9, 2294.0], [22.0, 2294.0], [22.1, 2294.0], [22.2, 2295.0], [22.3, 2295.0], [22.4, 2295.0], [22.5, 2295.0], [22.6, 2295.0], [22.7, 2295.0], [22.8, 2295.0], [22.9, 2295.0], [23.0, 2301.0], [23.1, 2301.0], [23.2, 2301.0], [23.3, 2301.0], [23.4, 2303.0], [23.5, 2303.0], [23.6, 2303.0], [23.7, 2303.0], [23.8, 2333.0], [23.9, 2333.0], [24.0, 2333.0], [24.1, 2333.0], [24.2, 2434.0], [24.3, 2434.0], [24.4, 2434.0], [24.5, 2434.0], [24.6, 2671.0], [24.7, 2671.0], [24.8, 2671.0], [24.9, 2671.0], [25.0, 2671.0], [25.1, 3265.0], [25.2, 3265.0], [25.3, 3265.0], [25.4, 3265.0], [25.5, 3294.0], [25.6, 3294.0], [25.7, 3294.0], [25.8, 3294.0], [25.9, 3295.0], [26.0, 3295.0], [26.1, 3295.0], [26.2, 3295.0], [26.3, 3295.0], [26.4, 3295.0], [26.5, 3295.0], [26.6, 3295.0], [26.7, 3296.0], [26.8, 3296.0], [26.9, 3296.0], [27.0, 3296.0], [27.1, 3296.0], [27.2, 3296.0], [27.3, 3296.0], [27.4, 3296.0], [27.5, 3297.0], [27.6, 3297.0], [27.7, 3297.0], [27.8, 3297.0], [27.9, 3297.0], [28.0, 3297.0], [28.1, 3297.0], [28.2, 3297.0], [28.3, 3297.0], [28.4, 3297.0], [28.5, 3297.0], [28.6, 3297.0], [28.7, 3298.0], [28.8, 3298.0], [28.9, 3298.0], [29.0, 3298.0], [29.1, 3300.0], [29.2, 3300.0], [29.3, 3300.0], [29.4, 3300.0], [29.5, 3300.0], [29.6, 3301.0], [29.7, 3301.0], [29.8, 3301.0], [29.9, 3301.0], [30.0, 3301.0], [30.1, 3301.0], [30.2, 3301.0], [30.3, 3301.0], [30.4, 3302.0], [30.5, 3302.0], [30.6, 3302.0], [30.7, 3302.0], [30.8, 3305.0], [30.9, 3305.0], [31.0, 3305.0], [31.1, 3305.0], [31.2, 3621.0], [31.3, 3621.0], [31.4, 3621.0], [31.5, 3621.0], [31.6, 3710.0], [31.7, 3710.0], [31.8, 3710.0], [31.9, 3710.0], [32.0, 3997.0], [32.1, 3997.0], [32.2, 3997.0], [32.3, 3997.0], [32.4, 4289.0], [32.5, 4289.0], [32.6, 4289.0], [32.7, 4289.0], [32.8, 4293.0], [32.9, 4293.0], [33.0, 4293.0], [33.1, 4293.0], [33.2, 4300.0], [33.3, 4300.0], [33.4, 4300.0], [33.5, 4300.0], [33.6, 4300.0], [33.7, 4300.0], [33.8, 4300.0], [33.9, 4300.0], [34.0, 4300.0], [34.1, 4302.0], [34.2, 4302.0], [34.3, 4302.0], [34.4, 4302.0], [34.5, 4305.0], [34.6, 4305.0], [34.7, 4305.0], [34.8, 4305.0], [34.9, 4305.0], [35.0, 4305.0], [35.1, 4305.0], [35.2, 4305.0], [35.3, 4333.0], [35.4, 4333.0], [35.5, 4333.0], [35.6, 4333.0], [35.7, 4336.0], [35.8, 4336.0], [35.9, 4336.0], [36.0, 4336.0], [36.1, 4337.0], [36.2, 4337.0], [36.3, 4337.0], [36.4, 4337.0], [36.5, 4339.0], [36.6, 4339.0], [36.7, 4339.0], [36.8, 4339.0], [36.9, 4346.0], [37.0, 4346.0], [37.1, 4346.0], [37.2, 4346.0], [37.3, 4442.0], [37.4, 4442.0], [37.5, 4442.0], [37.6, 4442.0], [37.7, 4442.0], [37.8, 4683.0], [37.9, 4683.0], [38.0, 4683.0], [38.1, 4683.0], [38.2, 4780.0], [38.3, 4780.0], [38.4, 4780.0], [38.5, 4780.0], [38.6, 5303.0], [38.7, 5303.0], [38.8, 5303.0], [38.9, 5303.0], [39.0, 5455.0], [39.1, 5455.0], [39.2, 5455.0], [39.3, 5455.0], [39.4, 6098.0], [39.5, 6098.0], [39.6, 6098.0], [39.7, 6098.0], [39.8, 6277.0], [39.9, 6277.0], [40.0, 6277.0], [40.1, 6277.0], [40.2, 6496.0], [40.3, 6496.0], [40.4, 6496.0], [40.5, 6496.0], [40.6, 6610.0], [40.7, 6610.0], [40.8, 6610.0], [40.9, 6610.0], [41.0, 6820.0], [41.1, 6820.0], [41.2, 6820.0], [41.3, 6820.0], [41.4, 7654.0], [41.5, 7654.0], [41.6, 7654.0], [41.7, 7654.0], [41.8, 7654.0], [41.9, 9128.0], [42.0, 9128.0], [42.1, 9128.0], [42.2, 9128.0], [42.3, 9300.0], [42.4, 9300.0], [42.5, 9300.0], [42.6, 9300.0], [42.7, 9385.0], [42.8, 9385.0], [42.9, 9385.0], [43.0, 9385.0], [43.1, 9598.0], [43.2, 9598.0], [43.3, 9598.0], [43.4, 9598.0], [43.5, 10665.0], [43.6, 10665.0], [43.7, 10665.0], [43.8, 10665.0], [43.9, 10800.0], [44.0, 10800.0], [44.1, 10800.0], [44.2, 10800.0], [44.3, 11275.0], [44.4, 11275.0], [44.5, 11275.0], [44.6, 11275.0], [44.7, 11746.0], [44.8, 11746.0], [44.9, 11746.0], [45.0, 11746.0], [45.1, 12059.0], [45.2, 12059.0], [45.3, 12059.0], [45.4, 12059.0], [45.5, 12088.0], [45.6, 12088.0], [45.7, 12088.0], [45.8, 12088.0], [45.9, 12088.0], [46.0, 12098.0], [46.1, 12098.0], [46.2, 12098.0], [46.3, 12098.0], [46.4, 12913.0], [46.5, 12913.0], [46.6, 12913.0], [46.7, 12913.0], [46.8, 13214.0], [46.9, 13214.0], [47.0, 13214.0], [47.1, 13214.0], [47.2, 13302.0], [47.3, 13302.0], [47.4, 13302.0], [47.5, 13302.0], [47.6, 13406.0], [47.7, 13406.0], [47.8, 13406.0], [47.9, 13406.0], [48.0, 13652.0], [48.1, 13652.0], [48.2, 13652.0], [48.3, 13652.0], [48.4, 15148.0], [48.5, 15148.0], [48.6, 15148.0], [48.7, 15148.0], [48.8, 15503.0], [48.9, 15503.0], [49.0, 15503.0], [49.1, 15503.0], [49.2, 16668.0], [49.3, 16668.0], [49.4, 16668.0], [49.5, 16668.0], [49.6, 16697.0], [49.7, 16697.0], [49.8, 16697.0], [49.9, 16697.0], [50.0, 16697.0], [50.1, 16724.0], [50.2, 16724.0], [50.3, 16724.0], [50.4, 16724.0], [50.5, 16756.0], [50.6, 16756.0], [50.7, 16756.0], [50.8, 16756.0], [50.9, 16803.0], [51.0, 16803.0], [51.1, 16803.0], [51.2, 16803.0], [51.3, 16940.0], [51.4, 16940.0], [51.5, 16940.0], [51.6, 16940.0], [51.7, 16991.0], [51.8, 16991.0], [51.9, 16991.0], [52.0, 16991.0], [52.1, 17011.0], [52.2, 17011.0], [52.3, 17011.0], [52.4, 17011.0], [52.5, 17040.0], [52.6, 17040.0], [52.7, 17040.0], [52.8, 17040.0], [52.9, 17092.0], [53.0, 17092.0], [53.1, 17092.0], [53.2, 17092.0], [53.3, 17482.0], [53.4, 17482.0], [53.5, 17482.0], [53.6, 17482.0], [53.7, 17506.0], [53.8, 17506.0], [53.9, 17506.0], [54.0, 17506.0], [54.1, 17523.0], [54.2, 17523.0], [54.3, 17523.0], [54.4, 17523.0], [54.5, 17523.0], [54.6, 17676.0], [54.7, 17676.0], [54.8, 17676.0], [54.9, 17676.0], [55.0, 17724.0], [55.1, 17724.0], [55.2, 17724.0], [55.3, 17724.0], [55.4, 17746.0], [55.5, 17746.0], [55.6, 17746.0], [55.7, 17746.0], [55.8, 17798.0], [55.9, 17798.0], [56.0, 17798.0], [56.1, 17798.0], [56.2, 17816.0], [56.3, 17816.0], [56.4, 17816.0], [56.5, 17816.0], [56.6, 17816.0], [56.7, 17816.0], [56.8, 17816.0], [56.9, 17816.0], [57.0, 17853.0], [57.1, 17853.0], [57.2, 17853.0], [57.3, 17853.0], [57.4, 17865.0], [57.5, 17865.0], [57.6, 17865.0], [57.7, 17865.0], [57.8, 17872.0], [57.9, 17872.0], [58.0, 17872.0], [58.1, 17872.0], [58.2, 17877.0], [58.3, 17877.0], [58.4, 17877.0], [58.5, 17877.0], [58.6, 17877.0], [58.7, 17961.0], [58.8, 17961.0], [58.9, 17961.0], [59.0, 17961.0], [59.1, 17978.0], [59.2, 17978.0], [59.3, 17978.0], [59.4, 17978.0], [59.5, 17980.0], [59.6, 17980.0], [59.7, 17980.0], [59.8, 17980.0], [59.9, 17993.0], [60.0, 17993.0], [60.1, 17993.0], [60.2, 17993.0], [60.3, 17997.0], [60.4, 17997.0], [60.5, 17997.0], [60.6, 17997.0], [60.7, 17998.0], [60.8, 17998.0], [60.9, 17998.0], [61.0, 17998.0], [61.1, 18017.0], [61.2, 18017.0], [61.3, 18017.0], [61.4, 18017.0], [61.5, 18039.0], [61.6, 18039.0], [61.7, 18039.0], [61.8, 18039.0], [61.9, 18049.0], [62.0, 18049.0], [62.1, 18049.0], [62.2, 18049.0], [62.3, 18080.0], [62.4, 18080.0], [62.5, 18080.0], [62.6, 18080.0], [62.7, 18080.0], [62.8, 18086.0], [62.9, 18086.0], [63.0, 18086.0], [63.1, 18086.0], [63.2, 18096.0], [63.3, 18096.0], [63.4, 18096.0], [63.5, 18096.0], [63.6, 18105.0], [63.7, 18105.0], [63.8, 18105.0], [63.9, 18105.0], [64.0, 18109.0], [64.1, 18109.0], [64.2, 18109.0], [64.3, 18109.0], [64.4, 18127.0], [64.5, 18127.0], [64.6, 18127.0], [64.7, 18127.0], [64.8, 18134.0], [64.9, 18134.0], [65.0, 18134.0], [65.1, 18134.0], [65.2, 18156.0], [65.3, 18156.0], [65.4, 18156.0], [65.5, 18156.0], [65.6, 18158.0], [65.7, 18158.0], [65.8, 18158.0], [65.9, 18158.0], [66.0, 18168.0], [66.1, 18168.0], [66.2, 18168.0], [66.3, 18168.0], [66.4, 18180.0], [66.5, 18180.0], [66.6, 18180.0], [66.7, 18180.0], [66.8, 18180.0], [66.9, 18183.0], [67.0, 18183.0], [67.1, 18183.0], [67.2, 18183.0], [67.3, 18194.0], [67.4, 18194.0], [67.5, 18194.0], [67.6, 18194.0], [67.7, 18201.0], [67.8, 18201.0], [67.9, 18201.0], [68.0, 18201.0], [68.1, 18258.0], [68.2, 18258.0], [68.3, 18258.0], [68.4, 18258.0], [68.5, 18269.0], [68.6, 18269.0], [68.7, 18269.0], [68.8, 18269.0], [68.9, 18305.0], [69.0, 18305.0], [69.1, 18305.0], [69.2, 18305.0], [69.3, 18351.0], [69.4, 18351.0], [69.5, 18351.0], [69.6, 18351.0], [69.7, 18375.0], [69.8, 18375.0], [69.9, 18375.0], [70.0, 18375.0], [70.1, 18381.0], [70.2, 18381.0], [70.3, 18381.0], [70.4, 18381.0], [70.5, 18386.0], [70.6, 18386.0], [70.7, 18386.0], [70.8, 18386.0], [70.9, 18386.0], [71.0, 18394.0], [71.1, 18394.0], [71.2, 18394.0], [71.3, 18394.0], [71.4, 18396.0], [71.5, 18396.0], [71.6, 18396.0], [71.7, 18396.0], [71.8, 18398.0], [71.9, 18398.0], [72.0, 18398.0], [72.1, 18398.0], [72.2, 18412.0], [72.3, 18412.0], [72.4, 18412.0], [72.5, 18412.0], [72.6, 18412.0], [72.7, 18412.0], [72.8, 18412.0], [72.9, 18412.0], [73.0, 18418.0], [73.1, 18418.0], [73.2, 18418.0], [73.3, 18418.0], [73.4, 18426.0], [73.5, 18426.0], [73.6, 18426.0], [73.7, 18426.0], [73.8, 18440.0], [73.9, 18440.0], [74.0, 18440.0], [74.1, 18440.0], [74.2, 18452.0], [74.3, 18452.0], [74.4, 18452.0], [74.5, 18452.0], [74.6, 18517.0], [74.7, 18517.0], [74.8, 18517.0], [74.9, 18517.0], [75.0, 18517.0], [75.1, 18534.0], [75.2, 18534.0], [75.3, 18534.0], [75.4, 18534.0], [75.5, 18549.0], [75.6, 18549.0], [75.7, 18549.0], [75.8, 18549.0], [75.9, 18554.0], [76.0, 18554.0], [76.1, 18554.0], [76.2, 18554.0], [76.3, 18558.0], [76.4, 18558.0], [76.5, 18558.0], [76.6, 18558.0], [76.7, 18565.0], [76.8, 18565.0], [76.9, 18565.0], [77.0, 18565.0], [77.1, 18586.0], [77.2, 18586.0], [77.3, 18586.0], [77.4, 18586.0], [77.5, 18588.0], [77.6, 18588.0], [77.7, 18588.0], [77.8, 18588.0], [77.9, 18636.0], [78.0, 18636.0], [78.1, 18636.0], [78.2, 18636.0], [78.3, 18642.0], [78.4, 18642.0], [78.5, 18642.0], [78.6, 18642.0], [78.7, 18649.0], [78.8, 18649.0], [78.9, 18649.0], [79.0, 18649.0], [79.1, 18670.0], [79.2, 18670.0], [79.3, 18670.0], [79.4, 18670.0], [79.5, 18670.0], [79.6, 18671.0], [79.7, 18671.0], [79.8, 18671.0], [79.9, 18671.0], [80.0, 18671.0], [80.1, 18671.0], [80.2, 18671.0], [80.3, 18671.0], [80.4, 18693.0], [80.5, 18693.0], [80.6, 18693.0], [80.7, 18693.0], [80.8, 18736.0], [80.9, 18736.0], [81.0, 18736.0], [81.1, 18736.0], [81.2, 18736.0], [81.3, 18736.0], [81.4, 18736.0], [81.5, 18736.0], [81.6, 18857.0], [81.7, 18857.0], [81.8, 18857.0], [81.9, 18857.0], [82.0, 18885.0], [82.1, 18885.0], [82.2, 18885.0], [82.3, 18885.0], [82.4, 18886.0], [82.5, 18886.0], [82.6, 18886.0], [82.7, 18886.0], [82.8, 18911.0], [82.9, 18911.0], [83.0, 18911.0], [83.1, 18911.0], [83.2, 18921.0], [83.3, 18921.0], [83.4, 18921.0], [83.5, 18921.0], [83.6, 18921.0], [83.7, 18953.0], [83.8, 18953.0], [83.9, 18953.0], [84.0, 18953.0], [84.1, 18965.0], [84.2, 18965.0], [84.3, 18965.0], [84.4, 18965.0], [84.5, 19022.0], [84.6, 19022.0], [84.7, 19022.0], [84.8, 19022.0], [84.9, 19078.0], [85.0, 19078.0], [85.1, 19078.0], [85.2, 19078.0], [85.3, 19101.0], [85.4, 19101.0], [85.5, 19101.0], [85.6, 19101.0], [85.7, 19106.0], [85.8, 19106.0], [85.9, 19106.0], [86.0, 19106.0], [86.1, 19115.0], [86.2, 19115.0], [86.3, 19115.0], [86.4, 19115.0], [86.5, 19125.0], [86.6, 19125.0], [86.7, 19125.0], [86.8, 19125.0], [86.9, 19131.0], [87.0, 19131.0], [87.1, 19131.0], [87.2, 19131.0], [87.3, 19134.0], [87.4, 19134.0], [87.5, 19134.0], [87.6, 19134.0], [87.7, 19134.0], [87.8, 19136.0], [87.9, 19136.0], [88.0, 19136.0], [88.1, 19136.0], [88.2, 19138.0], [88.3, 19138.0], [88.4, 19138.0], [88.5, 19138.0], [88.6, 19215.0], [88.7, 19215.0], [88.8, 19215.0], [88.9, 19215.0], [89.0, 19219.0], [89.1, 19219.0], [89.2, 19219.0], [89.3, 19219.0], [89.4, 19229.0], [89.5, 19229.0], [89.6, 19229.0], [89.7, 19229.0], [89.8, 19453.0], [89.9, 19453.0], [90.0, 19453.0], [90.1, 19453.0], [90.2, 19524.0], [90.3, 19524.0], [90.4, 19524.0], [90.5, 19524.0], [90.6, 19530.0], [90.7, 19530.0], [90.8, 19530.0], [90.9, 19530.0], [91.0, 19621.0], [91.1, 19621.0], [91.2, 19621.0], [91.3, 19621.0], [91.4, 19847.0], [91.5, 19847.0], [91.6, 19847.0], [91.7, 19847.0], [91.8, 19847.0], [91.9, 19936.0], [92.0, 19936.0], [92.1, 19936.0], [92.2, 19936.0], [92.3, 19957.0], [92.4, 19957.0], [92.5, 19957.0], [92.6, 19957.0], [92.7, 20018.0], [92.8, 20018.0], [92.9, 20018.0], [93.0, 20018.0], [93.1, 20032.0], [93.2, 20032.0], [93.3, 20032.0], [93.4, 20032.0], [93.5, 20087.0], [93.6, 20087.0], [93.7, 20087.0], [93.8, 20087.0], [93.9, 20142.0], [94.0, 20142.0], [94.1, 20142.0], [94.2, 20142.0], [94.3, 20168.0], [94.4, 20168.0], [94.5, 20168.0], [94.6, 20168.0], [94.7, 20217.0], [94.8, 20217.0], [94.9, 20217.0], [95.0, 20217.0], [95.1, 20221.0], [95.2, 20221.0], [95.3, 20221.0], [95.4, 20221.0], [95.5, 20223.0], [95.6, 20223.0], [95.7, 20223.0], [95.8, 20223.0], [95.9, 20223.0], [96.0, 20319.0], [96.1, 20319.0], [96.2, 20319.0], [96.3, 20319.0], [96.4, 20349.0], [96.5, 20349.0], [96.6, 20349.0], [96.7, 20349.0], [96.8, 20350.0], [96.9, 20350.0], [97.0, 20350.0], [97.1, 20350.0], [97.2, 20372.0], [97.3, 20372.0], [97.4, 20372.0], [97.5, 20372.0], [97.6, 20449.0], [97.7, 20449.0], [97.8, 20449.0], [97.9, 20449.0], [98.0, 20479.0], [98.1, 20479.0], [98.2, 20479.0], [98.3, 20479.0], [98.4, 20483.0], [98.5, 20483.0], [98.6, 20483.0], [98.7, 20483.0], [98.8, 20823.0], [98.9, 20823.0], [99.0, 20823.0], [99.1, 20823.0], [99.2, 23650.0], [99.3, 23650.0], [99.4, 23650.0], [99.5, 23650.0], [99.6, 32126.0], [99.7, 32126.0], [99.8, 32126.0], [99.9, 32126.0], [100.0, 32126.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 100.0, "series": [{"data": [[900.0, 1.0], [1000.0, 2.0], [1200.0, 1.0], [1600.0, 1.0], [2200.0, 2.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [4300.0, 2.0], [6100.0, 1.0], [6600.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8200.0, 1.0], [8800.0, 1.0], [10000.0, 1.0], [9800.0, 1.0], [10700.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [11800.0, 1.0], [12600.0, 1.0], [13200.0, 1.0], [12900.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [14000.0, 1.0], [14400.0, 1.0], [15800.0, 2.0], [15700.0, 3.0], [15500.0, 1.0], [15600.0, 5.0], [16200.0, 4.0], [16300.0, 6.0], [16100.0, 1.0], [16000.0, 1.0], [15900.0, 3.0], [16500.0, 1.0], [16700.0, 7.0], [16600.0, 8.0], [16400.0, 3.0], [16900.0, 2.0], [16800.0, 2.0], [17000.0, 2.0], [17100.0, 2.0], [18300.0, 7.0], [17800.0, 12.0], [17900.0, 13.0], [18000.0, 6.0], [18200.0, 8.0], [18100.0, 11.0], [18400.0, 5.0], [17700.0, 1.0], [17500.0, 1.0], [18500.0, 9.0], [18600.0, 3.0], [19000.0, 8.0], [19100.0, 4.0], [18900.0, 3.0], [18800.0, 5.0], [19400.0, 3.0], [19200.0, 1.0], [19900.0, 3.0], [20000.0, 4.0], [20200.0, 2.0], [20300.0, 2.0], [20400.0, 4.0], [20100.0, 1.0], [20500.0, 1.0], [200.0, 30.0], [300.0, 12.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[10300.0, 1.0], [1100.0, 95.0], [1200.0, 100.0], [1300.0, 4.0], [21100.0, 1.0], [1400.0, 6.0], [1500.0, 13.0], [1600.0, 1.0], [27100.0, 1.0], [1800.0, 1.0], [29200.0, 1.0], [29500.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 1.0], [34100.0, 1.0], [2200.0, 5.0], [2300.0, 1.0], [37200.0, 1.0], [2500.0, 1.0], [43500.0, 1.0], [3200.0, 1.0], [4200.0, 1.0], [4100.0, 3.0], [77500.0, 1.0], [76400.0, 1.0], [76200.0, 1.0], [5100.0, 4.0], [5200.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[1000.0, 3.0], [1200.0, 2.0], [1300.0, 2.0], [2200.0, 5.0], [2300.0, 3.0], [2400.0, 1.0], [2600.0, 1.0], [3200.0, 10.0], [3300.0, 5.0], [3600.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [4300.0, 10.0], [4200.0, 2.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [6800.0, 1.0], [7600.0, 1.0], [9100.0, 1.0], [9300.0, 2.0], [9500.0, 1.0], [10600.0, 1.0], [11200.0, 1.0], [10800.0, 1.0], [11700.0, 1.0], [12000.0, 3.0], [12900.0, 1.0], [13300.0, 1.0], [13200.0, 1.0], [13400.0, 1.0], [13600.0, 1.0], [15100.0, 1.0], [15500.0, 1.0], [16600.0, 2.0], [16700.0, 2.0], [16800.0, 1.0], [17000.0, 3.0], [16900.0, 2.0], [17400.0, 1.0], [18200.0, 3.0], [17500.0, 2.0], [18000.0, 6.0], [18100.0, 10.0], [18400.0, 6.0], [17700.0, 3.0], [17600.0, 1.0], [17800.0, 6.0], [17900.0, 6.0], [18300.0, 8.0], [18500.0, 8.0], [18600.0, 7.0], [18700.0, 2.0], [19100.0, 8.0], [19000.0, 2.0], [19200.0, 3.0], [18900.0, 4.0], [18800.0, 3.0], [19400.0, 1.0], [19500.0, 2.0], [19600.0, 1.0], [19800.0, 1.0], [20000.0, 3.0], [20100.0, 2.0], [20300.0, 4.0], [20200.0, 3.0], [20400.0, 3.0], [19900.0, 2.0], [20800.0, 1.0], [23600.0, 1.0], [32100.0, 1.0], [200.0, 30.0], [300.0, 14.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 77500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 86.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 362.0, "series": [{"data": [[0.0, 86.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 215.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 362.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 88.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 14.666666666666666, "minX": 1.75717308E12, "maxY": 84.85618729096988, "series": [{"data": [[1.75717314E12, 84.85618729096988], [1.7571732E12, 75.02727272727283], [1.75717308E12, 14.666666666666666]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7571732E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 291.0, "minX": 1.0, "maxY": 32126.0, "series": [{"data": [[15.0, 295.25], [16.0, 291.0], [17.0, 297.0], [18.0, 295.5], [20.0, 681.5], [22.0, 293.0], [24.0, 294.0], [25.0, 425.66666666666663], [26.0, 294.0], [27.0, 298.3333333333333], [28.0, 307.0], [33.0, 304.3333333333333], [32.0, 294.5], [34.0, 295.5], [39.0, 332.0], [40.0, 303.0], [41.0, 334.5], [43.0, 2292.0], [48.0, 295.0], [52.0, 16513.0], [55.0, 9541.0], [56.0, 16579.0], [57.0, 16296.0], [59.0, 16291.25], [61.0, 16541.0], [62.0, 16022.0], [63.0, 15850.333333333334], [65.0, 11485.666666666668], [70.0, 15587.666666666666], [71.0, 15674.0], [72.0, 15686.0], [74.0, 15976.0], [76.0, 8766.5], [77.0, 12871.666666666668], [78.0, 16415.5], [79.0, 16339.666666666666], [83.0, 16638.0], [85.0, 16686.0], [89.0, 16611.0], [90.0, 16760.0], [91.0, 16830.5], [92.0, 16689.5], [93.0, 16902.75], [94.0, 16824.0], [95.0, 16878.5], [96.0, 18116.375], [97.0, 17933.75], [98.0, 18121.090909090908], [99.0, 18128.11111111111], [100.0, 17974.333333333336], [102.0, 18345.733333333334], [101.0, 18279.466666666667], [103.0, 18840.100000000002], [105.0, 11565.075], [104.0, 18837.11111111111], [107.0, 19781.0], [106.0, 14124.75], [108.0, 20261.818181818184], [109.0, 20334.0], [1.0, 294.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[83.14342629482069, 13365.605577689237]], "isOverall": false, "label": "Create Booking-Aggregated", "isController": false}, {"data": [[3.0, 506.0], [8.0, 2325.5], [12.0, 1197.0], [13.0, 1201.0], [15.0, 1189.3333333333333], [16.0, 1184.5], [17.0, 1207.0], [18.0, 1289.75], [19.0, 1191.0], [20.0, 1204.0], [22.0, 1226.0], [23.0, 1259.0], [24.0, 1192.0], [25.0, 1183.0], [26.0, 1189.0], [27.0, 1196.5], [29.0, 1190.0], [30.0, 1491.0], [31.0, 1328.0], [32.0, 9885.333333333334], [33.0, 7860.666666666667], [35.0, 1279.0], [34.0, 2218.0], [36.0, 1862.0], [38.0, 1188.0], [39.0, 12570.8], [40.0, 13216.666666666666], [41.0, 22315.25], [42.0, 1208.5], [43.0, 1168.0], [44.0, 1594.5], [47.0, 1204.0], [46.0, 3700.0], [49.0, 3861.6666666666665], [50.0, 1709.0], [51.0, 1203.0], [52.0, 1228.0], [53.0, 1190.0], [54.0, 1214.0], [55.0, 1214.0], [56.0, 1203.75], [58.0, 3199.5], [61.0, 2194.6666666666665], [60.0, 3686.5], [62.0, 1204.0], [63.0, 1606.0], [64.0, 1726.5], [65.0, 1219.0], [67.0, 1206.0], [69.0, 1218.0], [70.0, 1326.3333333333333], [71.0, 1207.0], [72.0, 1214.0], [74.0, 1240.0], [75.0, 2200.6666666666665], [76.0, 2842.4], [78.0, 1191.0], [79.0, 1202.0], [81.0, 1181.0], [82.0, 1196.5], [83.0, 1587.0], [86.0, 1194.6666666666667], [87.0, 1224.0], [89.0, 1216.0], [90.0, 1234.0], [91.0, 1212.0], [92.0, 1220.5], [94.0, 1193.0], [95.0, 1568.6666666666667], [93.0, 1213.0], [96.0, 1421.0], [97.0, 1400.3333333333333], [98.0, 1352.4166666666663], [99.0, 1259.2], [102.0, 1287.2857142857144], [100.0, 1211.1666666666665], [101.0, 1320.5], [103.0, 12116.642857142857], [104.0, 1231.2500000000002], [105.0, 1278.0], [106.0, 9571.0], [107.0, 1186.5], [108.0, 1200.4]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[72.42578125, 3184.066406249999]], "isOverall": false, "label": "User Login-Aggregated", "isController": false}, {"data": [[4.0, 32126.0], [15.0, 660.0], [16.0, 293.3333333333333], [17.0, 298.5], [18.0, 295.0], [19.0, 297.6666666666667], [20.0, 296.5], [21.0, 294.6666666666667], [22.0, 300.0], [23.0, 298.0], [25.0, 300.0], [26.0, 294.0], [27.0, 550.6666666666666], [28.0, 294.0], [29.0, 293.0], [30.0, 292.0], [31.0, 305.0], [33.0, 548.6666666666666], [32.0, 294.0], [35.0, 326.5], [34.0, 298.0], [37.0, 9385.0], [36.0, 7654.0], [39.0, 6610.0], [38.0, 23650.0], [41.0, 2569.25], [43.0, 4683.0], [42.0, 2671.0], [44.0, 4305.0], [47.0, 3301.0], [46.0, 2795.5], [49.0, 2299.5], [48.0, 1293.0], [50.0, 4289.0], [53.0, 4302.0], [52.0, 3005.5], [55.0, 3295.0], [54.0, 2291.0], [57.0, 292.0], [56.0, 2303.0], [59.0, 4300.0], [58.0, 3300.0], [61.0, 3296.0], [60.0, 4293.0], [66.0, 3301.0], [65.0, 3294.0], [64.0, 1302.3333333333335], [71.0, 2295.0], [70.0, 3838.5], [69.0, 4337.0], [75.0, 3298.0], [74.0, 1299.0], [73.0, 3295.0], [72.0, 1300.0], [79.0, 3621.0], [78.0, 3631.0], [77.0, 3302.0], [76.0, 3297.0], [83.0, 6046.5], [82.0, 1303.0], [81.0, 4300.0], [80.0, 1968.0], [87.0, 4442.0], [85.0, 11625.0], [84.0, 11746.0], [88.0, 7788.5], [92.0, 13326.75], [95.0, 14319.777777777777], [94.0, 17041.5], [93.0, 14564.0], [96.0, 17437.0], [97.0, 18009.5], [98.0, 16313.285714285714], [99.0, 17399.428571428572], [102.0, 18385.3], [101.0, 18256.166666666668], [103.0, 15635.5], [100.0, 15889.857142857143], [105.0, 17045.75], [104.0, 18958.235294117643], [107.0, 19914.699999999997], [106.0, 6098.0], [109.0, 20293.285714285714], [108.0, 20374.0]], "isOverall": false, "label": "Search Booking", "isController": false}, {"data": [[78.48360655737704, 11323.245901639348]], "isOverall": false, "label": "Search Booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 109.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 55.6, "minX": 1.75717308E12, "maxY": 7819.466666666666, "series": [{"data": [[1.75717314E12, 4214.416666666667], [1.7571732E12, 7819.466666666666], [1.75717308E12, 155.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75717314E12, 1548.0166666666667], [1.7571732E12, 2163.016666666667], [1.75717308E12, 55.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7571732E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1297.4852941176475, "minX": 1.75717308E12, "maxY": 17968.56666666666, "series": [{"data": [[1.75717314E12, 17288.09708737862], [1.7571732E12, 10635.763513513513]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.75717314E12, 1297.4852941176475], [1.7571732E12, 5759.231481481483], [1.75717308E12, 1388.8333333333333]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[1.75717314E12, 17968.56666666666], [1.7571732E12, 9156.293478260866]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7571732E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1297.3897058823532, "minX": 1.75717308E12, "maxY": 17968.45, "series": [{"data": [[1.75717314E12, 17288.029126213583], [1.7571732E12, 10635.72972972973]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.75717314E12, 1297.3897058823532], [1.7571732E12, 5754.527777777779], [1.75717308E12, 1386.8333333333333]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[1.75717314E12, 17968.45], [1.7571732E12, 8981.673913043476]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7571732E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.75717308E12, "maxY": 1076.8333333333335, "series": [{"data": [[1.75717314E12, 0.0], [1.7571732E12, 12.412162162162161]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.75717314E12, 969.235294117647], [1.7571732E12, 952.175925925926], [1.75717308E12, 1076.8333333333335]], "isOverall": false, "label": "User Login", "isController": false}, {"data": [[1.75717314E12, 0.0], [1.7571732E12, 0.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7571732E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 290.0, "minX": 1.75717308E12, "maxY": 43528.0, "series": [{"data": [[1.75717314E12, 18671.0], [1.7571732E12, 43528.0], [1.75717308E12, 2582.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75717314E12, 1172.0], [1.7571732E12, 290.0], [1.75717308E12, 1168.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75717314E12, 18386.0], [1.7571732E12, 20031.7], [1.75717308E12, 2428.1000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75717314E12, 18649.0], [1.7571732E12, 31721.269999999862], [1.75717308E12, 2582.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75717314E12, 16166.0], [1.7571732E12, 1555.0], [1.75717308E12, 1201.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.75717314E12, 18517.0], [1.7571732E12, 20357.7], [1.75717308E12, 2582.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7571732E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 295.0, "minX": 1.0, "maxY": 77543.0, "series": [{"data": [[2.0, 1223.5], [8.0, 16976.0], [9.0, 15904.0], [10.0, 297.0], [11.0, 18558.0], [3.0, 1201.0], [12.0, 1178.5], [52.0, 3296.0], [14.0, 18289.0], [1.0, 1208.0], [4.0, 1444.0], [16.0, 299.0], [18.0, 295.0], [19.0, 312.0], [5.0, 16611.0], [6.0, 17873.5], [7.0, 16724.0], [28.0, 2482.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 76492.0], [1.0, 3265.0], [73.0, 11275.0], [19.0, 8519.5], [11.0, 76218.0], [3.0, 16316.0], [52.0, 4300.0], [7.0, 77543.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 77543.0, "series": [{"data": [[2.0, 1223.5], [8.0, 16975.0], [9.0, 15904.0], [10.0, 297.0], [11.0, 18558.0], [3.0, 1201.0], [12.0, 1178.5], [52.0, 3296.0], [14.0, 18289.0], [1.0, 1208.0], [4.0, 1444.0], [16.0, 299.0], [18.0, 294.5], [19.0, 312.0], [5.0, 16611.0], [6.0, 17873.5], [7.0, 16724.0], [28.0, 2482.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 76492.0], [1.0, 3265.0], [73.0, 11275.0], [19.0, 8519.5], [11.0, 76218.0], [3.0, 0.0], [52.0, 4300.0], [7.0, 77543.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 73.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.75717308E12, "maxY": 6.35, "series": [{"data": [[1.75717314E12, 6.35], [1.7571732E12, 5.8], [1.75717308E12, 0.36666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7571732E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.75717308E12, "maxY": 5.866666666666666, "series": [{"data": [[1.75717314E12, 4.983333333333333], [1.7571732E12, 5.866666666666666], [1.75717308E12, 0.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7571732E12, 1.2833333333333334]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.7571732E12, 0.15]], "isOverall": false, "label": "404", "isController": false}, {"data": [[1.7571732E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7571732E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.75717308E12, "maxY": 2.3666666666666667, "series": [{"data": [[1.75717314E12, 1.7166666666666666], [1.7571732E12, 1.7666666666666666]], "isOverall": false, "label": "Create Booking-success", "isController": false}, {"data": [[1.75717314E12, 2.2666666666666666], [1.7571732E12, 1.7333333333333334], [1.75717308E12, 0.2]], "isOverall": false, "label": "User Login-success", "isController": false}, {"data": [[1.7571732E12, 0.7]], "isOverall": false, "label": "Search Booking-failure", "isController": false}, {"data": [[1.7571732E12, 0.06666666666666667]], "isOverall": false, "label": "User Login-failure", "isController": false}, {"data": [[1.7571732E12, 0.7]], "isOverall": false, "label": "Create Booking-failure", "isController": false}, {"data": [[1.75717314E12, 1.0], [1.7571732E12, 2.3666666666666667]], "isOverall": false, "label": "Search Booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7571732E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.75717308E12, "maxY": 5.866666666666666, "series": [{"data": [[1.75717314E12, 4.983333333333333], [1.7571732E12, 5.866666666666666], [1.75717308E12, 0.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7571732E12, 1.4666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7571732E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

